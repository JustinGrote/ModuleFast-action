name: "ModuleFast"
author: "Justin Grote @JustinWGrote github.com/JustinGrote"
description: Installs PowerShell Modules in a high performance declarative fashion.
branding:
  color: "blue"
  icon: "download-cloud"

inputs:
  specification:
    description: |
      The modules to install. Separate module specifications with a space or linebreak. If this setting is not specified, will look for a required modules spec in the working directory.

      Example 1: modules: Az ImportExcel>2.0 Pester!:[4.10.1,5.0.0]
      Example 2: modules: |
        Az
        ImportExcel<2.0
        Pester!:[4.10.1,5.0.0]
    required: false
  path:
    description: The path to a module specification file. If not specified, will look for a required modules spec in the working directory. Cannot be used with specification above.
    required: false
  destination:
    description: The destination path to install the modules. If not specified it will be installed to the default module path on the runner.
    required: false
  release:
    description: The release of ModuleFast to install. Can be a release tag e.g. v0.0.2 or a branch name. If not specified, will install the latest stable release. To use the latest available code from the main branch, specify "main". It is recommended you pin to a specific release to prevent your workflows from breaking if a new breaking version of ModuleFast is released.
    required: false
  update:
    description: ModuleFast will not do a remote search of the locally installed or cached modules to satisfy your current spec requirements. If you want to force a remote search for updates every time, set this to true. You should generally prefer to update your specifications to be more specific (e.g. 'Pester>5.0') rather than using this option.
    required: false
  args:
    description: 'Additional arguments to pass to the modulefast installer. Arguments *must* be specified in either -Parameter:Value format or just -Parameter for switches. Spaces between parameters is *not supported*. Example: "-Verbose"'
    required: false

runs:
  using: "composite"
  steps:
    - name: ‚öôÔ∏è Set ModuleFast Cache Path
      shell: pwsh
      run: |
        $Destination = '${{ inputs.destination }}'
        if (-not $Destination) {
          $Destination = $env:PSModulePath.split([IO.Path]::PathSeparator)[0]
        }
        if (-not (Test-Path $Destination)) {
          New-Item -ItemType Directory -Path $Destination | Out-Null
        }
        "MODULEFAST_DESTINATION=$Destination" | Out-File -Append -FilePath $env:GITHUB_ENV
    - name: üíæ Cache Modulefast Modules
      uses: actions/cache@v4
      with:
        path: ${{ env.MODULEFAST_DESTINATION }}
        key: mfcache-OS:${{ runner.os }}-DEST:${{ env.MODULEFAST_DESTINATION }}-SPEC:${{ inputs.specification }}-PATHHASH:${{ hashFiles(inputs.path) }}-SPECFILEHASH${{ hashFiles('**/*.requires.*')}}-LOCKHASH${{ hashFiles('requires.lock.json')}}

        restore-keys: |
          mfcache-OS:${{ runner.os }}-DEST:${{ env.MODULEFAST_DESTINATION }}-SPEC:${{ inputs.specification }}-PATHHASH:${{ hashFiles(inputs.path) }}
          mfcache-OS:${{ runner.os }}-DEST:${{ env.MODULEFAST_DESTINATION }}
          mfcache-OS:${{ runner.os }}

    - name: "‚ö° ModuleFast Install"
      shell: pwsh
      run: |
        #ModuleFast GitHub Action Bootstrap
        $bootstrapParams = @{
          ${{ inputs.release != 0 && format('Release=''{0}''', inputs.release) || '' }}
          Debug = ${{ runner.debug != 0 && '$true' || '$false' }}
        }
        $imfParams = @{
          ${{ inputs.specification != 0 && format('Specification=''{0}''', inputs.specification) || '' }}
          ${{ inputs.path != 0 && format('Path=''{0}''', inputs.path) || '' }}
          ${{ inputs.update != 0 && 'Update=$true' || '' }}
          ${{ format('Destination=''{0}''', env.MODULEFAST_DESTINATION) }}
        }
        ${{ github.action_path }}/action.ps1 $bootstrapParams $imfParams $bootstrapParams.Debug ${{ inputs.args }}

